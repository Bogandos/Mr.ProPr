//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfServiceLibrary1.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectSelectAllClients", ReplyAction="http://tempuri.org/IService1/SelectAllClientsResponse")]
        System.Data.DataSet SelectAllClients();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectSelectAllClients", ReplyAction="http://tempuri.org/IService1/SelectAllClientsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> SelectAllClientsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectClient", ReplyAction="http://tempuri.org/IService1/SelectClientResponse")]
        System.Data.DataSet SelectClient(int id_client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectClient", ReplyAction="http://tempuri.org/IService1/SelectClientResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> SelectClientAsync(int id_client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertClient", ReplyAction="http://tempuri.org/IService1/InsertClientResponse")]
        string InsertClient(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertClient", ReplyAction="http://tempuri.org/IService1/InsertClientResponse")]
        System.Threading.Tasks.Task<string> InsertClientAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteClient", ReplyAction="http://tempuri.org/IService1/DeleteClientResponse")]
        string DeleteClient(int id_client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteClient", ReplyAction="http://tempuri.org/IService1/DeleteClientResponse")]
        System.Threading.Tasks.Task<string> DeleteClientAsync(int id_client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateClient", ReplyAction="http://tempuri.org/IService1/UpdateClientResponse")]
        string UpdateClient(int id_client, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateClient", ReplyAction="http://tempuri.org/IService1/UpdateClientResponse")]
        System.Threading.Tasks.Task<string> UpdateClientAsync(int id_client, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectAllRequests", ReplyAction="http://tempuri.org/IService1/SelectAllRequestsResponse")]
        System.Data.DataSet SelectAllRequests();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectAllRequests", ReplyAction="http://tempuri.org/IService1/SelectAllRequestsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> SelectAllRequestsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectRequest", ReplyAction="http://tempuri.org/IService1/SelectRequestResponse")]
        System.Data.DataSet SelectRequest(int id_request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectRequest", ReplyAction="http://tempuri.org/IService1/SelectRequestResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> SelectRequestAsync(int id_request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertRequest", ReplyAction="http://tempuri.org/IService1/InsertRequestResponse")]
        string InsertRequest(int id_request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertRequest", ReplyAction="http://tempuri.org/IService1/InsertRequestResponse")]
        System.Threading.Tasks.Task<string> InsertRequestAsync(int id_request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteRequest", ReplyAction="http://tempuri.org/IService1/DeleteRequestResponse")]
        string DeleteRequest(int id_request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteRequest", ReplyAction="http://tempuri.org/IService1/DeleteRequestResponse")]
        System.Threading.Tasks.Task<string> DeleteRequestAsync(int id_request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateRequest", ReplyAction="http://tempuri.org/IService1/UpdateRequestResponse")]
        string UpdateRequest(int id_request, int client_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateRequest", ReplyAction="http://tempuri.org/IService1/UpdateRequestResponse")]
        System.Threading.Tasks.Task<string> UpdateRequestAsync(int id_request, int client_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectAllServices", ReplyAction="http://tempuri.org/IService1/SelectAllServicesResponse")]
        System.Data.DataSet SelectAllServices();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectAllServices", ReplyAction="http://tempuri.org/IService1/SelectAllServicesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> SelectAllServicesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectService", ReplyAction="http://tempuri.org/IService1/SelectServiceResponse")]
        System.Data.DataSet SelectService(int id_service);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectService", ReplyAction="http://tempuri.org/IService1/SelectServiceResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> SelectServiceAsync(int id_service);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertService", ReplyAction="http://tempuri.org/IService1/InsertServiceResponse")]
        string InsertService(string name, int price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertService", ReplyAction="http://tempuri.org/IService1/InsertServiceResponse")]
        System.Threading.Tasks.Task<string> InsertServiceAsync(string name, int price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteService", ReplyAction="http://tempuri.org/IService1/DeleteServiceResponse")]
        string DeleteService(int id_service);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteService", ReplyAction="http://tempuri.org/IService1/DeleteServiceResponse")]
        System.Threading.Tasks.Task<string> DeleteServiceAsync(int id_service);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateService", ReplyAction="http://tempuri.org/IService1/UpdateServiceResponse")]
        string UpdateService(int id_service, int price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateService", ReplyAction="http://tempuri.org/IService1/UpdateServiceResponse")]
        System.Threading.Tasks.Task<string> UpdateServiceAsync(int id_service, int price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectRequestDetails", ReplyAction="http://tempuri.org/IService1/SelectRequestDetailsResponse")]
        System.Data.DataSet SelectRequestDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectRequestDetails", ReplyAction="http://tempuri.org/IService1/SelectRequestDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> SelectRequestDetailsAsync();
          
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertRequestDetails", ReplyAction="http://tempuri.org/IService1/InsertRequestDetailsResponse")]
        string InsertRequestDetails(int request_id, int service_id, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertRequestDetails", ReplyAction="http://tempuri.org/IService1/InsertRequestDetailsResponse")]
        System.Threading.Tasks.Task<string> InsertRequestDetailsAsync(int request_id, int service_id, int count);

        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteRequestDetails", ReplyAction="http://tempuri.org/IService1/DeleteRequestDetailsResponse")]
        string DeleteRequestDetails(int request_id, int service_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteRequestDetails", ReplyAction="http://tempuri.org/IService1/DeleteRequestDetailsResponse")]
        System.Threading.Tasks.Task<string> DeleteRequestDetailsAsync(int request_id, int service_id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WcfServiceLibrary1.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WcfServiceLibrary1.ServiceReference1.IService1>, WcfServiceLibrary1.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet SelectAllClients() {
            return base.Channel.SelectAllClients();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SelectAllClientsAsync() {
            return base.Channel.SelectAllClientsAsync();
        }
        
        public System.Data.DataSet SelectClient(int id_client) {
            return base.Channel.SelectClient(id_client);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SelectClientAsync(int id_client) {
            return base.Channel.SelectClientAsync(id_client);
        }
        
        public string InsertClient(string name) {
            return base.Channel.InsertClient(name);
        }
        
        public System.Threading.Tasks.Task<string> InsertClientAsync(string name) {
            return base.Channel.InsertClientAsync(name);
        }
        
        public string DeleteClient(int id_client) {
            return base.Channel.DeleteClient(id_client);
        }
        
        public System.Threading.Tasks.Task<string> DeleteClientAsync(int id_client) {
            return base.Channel.DeleteClientAsync(id_client);
        }
        
        public string UpdateClient(int id_client, string name) {
            return base.Channel.UpdateClient(id_client, name);
        }
        
        public System.Threading.Tasks.Task<string> UpdateClientAsync(int id_client, string name) {
            return base.Channel.UpdateClientAsync(id_client, name);
        }
        
        public System.Data.DataSet SelectAllRequests() {
            return base.Channel.SelectAllRequests();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SelectAllRequestsAsync() {
            return base.Channel.SelectAllRequestsAsync();
        }
        
        public System.Data.DataSet SelectRequest(int id_request) {
            return base.Channel.SelectRequest(id_request);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SelectRequestAsync(int id_request) {
            return base.Channel.SelectRequestAsync(id_request);
        }
        
        public string InsertRequest(int id_request) {
            return base.Channel.InsertRequest(id_request);
        }
        
        public System.Threading.Tasks.Task<string> InsertRequestAsync(int id_request) {
            return base.Channel.InsertRequestAsync(id_request);
        }
        
        public string DeleteRequest(int id_request) {
            return base.Channel.DeleteRequest(id_request);
        }
        
        public System.Threading.Tasks.Task<string> DeleteRequestAsync(int id_request) {
            return base.Channel.DeleteRequestAsync(id_request);
        }
        
        public string UpdateRequest(int id_request, int client_id) {
            return base.Channel.UpdateRequest(id_request, client_id);
        }
        
        public System.Threading.Tasks.Task<string> UpdateRequestAsync(int id_request, int client_id) {
            return base.Channel.UpdateRequestAsync(id_request, client_id);
        }
        
        public System.Data.DataSet SelectAllServices() {
            return base.Channel.SelectAllServices();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SelectAllServicesAsync() {
            return base.Channel.SelectAllServicesAsync();
        }
        
        public System.Data.DataSet SelectService(int id_service) {
            return base.Channel.SelectService(id_service);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SelectServiceAsync(int id_service) {
            return base.Channel.SelectServiceAsync(id_service);
        }
        
        public string InsertService(string name, int price) {
            return base.Channel.InsertService(name, price);
        }
        
        public System.Threading.Tasks.Task<string> InsertServiceAsync(string name, int price) {
            return base.Channel.InsertServiceAsync(name, price);
        }
        
        public string DeleteService(int id_service) {
            return base.Channel.DeleteService(id_service);
        }
        
        public System.Threading.Tasks.Task<string> DeleteServiceAsync(int id_service) {
            return base.Channel.DeleteServiceAsync(id_service);
        }
        
        public string UpdateService(int id_service, int price) {
            return base.Channel.UpdateService(id_service, price);
        }
        
        public System.Threading.Tasks.Task<string> UpdateServiceAsync(int id_service, int price) {
            return base.Channel.UpdateServiceAsync(id_service, price);
        }
        
        public System.Data.DataSet SelectRequestDetails() {
            return base.Channel.SelectRequestDetails();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SelectRequestDetailsAsync() {
            return base.Channel.SelectRequestDetailsAsync();
        }
        
        public System.Data.DataSet DeleteRequestDetails(int request_id, int service_id) {
            return base.Channel.DeleteRequestDetails(request_id, service_id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> DeleteRequestDetailsAsync(int request_id, int service_id) {
            return base.Channel.DeleteRequestDetailsAsync(request_id, service_id);
        }
        
        public string InsertRequestDetails(int request_id, int service_id, int count) {
            return base.Channel.InsertRequestDetails(request_id, service_id);
        }
        
        public System.Threading.Tasks.Task<string> InsertRequestDetailsAsync(int request_id, int service_id, int count) {
            return base.Channel.InsertRequestDetailsAsync(request_id, service_id);
        }
    }
}
